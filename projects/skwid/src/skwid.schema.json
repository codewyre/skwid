{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "SkwidSolutionProjectSource": {
      "type": "object",
      "description": "Defines a skwid project collection",
      "additionalProperties": true,
      "properties": {
        "type": {
          "description": "The type of the project information source",
          "type": "string",
          "enum": [
            "lerna",
            "fixed",
            "yarn-workspace"
          ],
          "default": "fixed"
        }
      }
    },
    "SkwidSolution": {
      "type": "object",
      "description": "Defines a skwid project collection",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "Display Name of the solution",
          "type": "string"
        },
        "sources": {
          "description": "Defines project information sources for a skwid solution.",
          "items": {
            "$ref": "#/definitions/SkwidSolutionProjectSource"
          },
          "type": "array"
        }
      }
    },
    "SkwidVariables": {
      "type": "object",
      "description": "Key-Value pair of globally available variables.",
      "additionalProperties": true
    },
    "SkwidTask": {
      "additionalProperties": false,
      "description": "Command definition",
      "properties": {
        "description": {
          "description": "Description of this task, being shown to the user when the command help is printed.",
          "type": "string"
        },
        "children": {
          "description": "Key value based configuration of sub-tasks.",
          "additionalProperties": {
            "$ref": "#/definitions/SkwidTask"
          },
          "type": "object"
        },
        "jobs": {
          "description": "Jobs to run when the command is run.",
          "items": {
            "$ref": "#/definitions/SkwidJob"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SkwidJob": {
      "properties": {
        "type": {
          "description": "Type of the job",
          "type": [
            "string"
          ],
          "oneOf": [
            {
              "const": "declare",
              "description": "Declare variables for the following jobs and sub-jobs"
            },
            {
              "const": "condition",
              "description": "Define a condition about when to execute the sub-jobs"
            },
            {
              "const": "command",
              "description": "Execute a command as a child-process"
            },
            {
              "const": "task",
              "description": "Execute a task as sub-job"
            },
            {
              "const": "repeat",
              "description": "Repeat all sub-jobs for each element of an input array"
            }
          ]
        },
        "name": {
          "description": "Human readable caption for a command. Will be logged and shown to the user.",
          "type": "string"
        }
      },
      "type": "object",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": { "const": "declare" }
            }
          },
          "then": {
            "properties": {
              "variables": {
                "$ref": "#/definitions/SkwidVariables"
              },
              "level": {
                "description": "The number of context levels to go up to define the variables. Default is 0 (current context) which means that this and all children jobs will have access to the variables. Setting `1` will mean the parent and its children, 2 the parent of the parent and its children, and so on.",
                "type": ["string", "number"],
                "enum": [
                  "global"
                ],
                "default": 0
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": { "const": "condition" }
            }
          },
          "then": {
            "properties": {
              "condition": {
                "description": "The condition to check",
                "type": [
                  "boolean",
                  "string"
                ]
              },
              "jobs": {
                "type": "array",
                "description": "The jobs to execute if `condition` is true",
                "items": {
                  "$ref": "#/definitions/SkwidJob"
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": { "const": "command" }
            }
          },
          "then": {
            "properties": {
              "command": {
                "description": "The command to execute"
              },
              "workingDirectory": {
                "type": "string",
                "description": "Sets a working directory for the command. Default is the last set working directory. If not set yet manually, it's the directory of this configuration file."
              }
            }
          }
        }
      ]
    }
  },
  "description": "A schema for the `/skwid.ya?ml/` file.",
  "properties": {
    "variables": {
      "$ref": "#/definitions/SkwidVariables"
    },
    "type": {
      "enum": [
        "project",
        "solution"
      ],
      "default": "project",
      "description": "The type of this skwid project. Can be `solution` or `project`. Default is `project`",
      "type": "string"
    },
    "shell": {
      "description": "The wrapping shell command to use when executing commands, e.g. using the command job. Default is `['sh', '-c', '${command}']` for unix systems, `['${command}']` for windows systems.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": "['sh', '-c', '${command}']"
    },
    "solution": {
      "$ref": "#/definitions/SkwidSolution",
      "description": "Defines a skwid project collection"
    },
    "extends": {
      "description": "Array of file names that provide base configurations to include from elsewhere",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "tasks": {
      "additionalProperties": {
        "$ref": "#/definitions/SkwidTask"
      },
      "description": "Key value based configuration of tasks.",
      "type": "object"
    }
  },
  "type": "object"
}